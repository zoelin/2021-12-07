<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>tw.com.fcb.mimosa.workshop</groupId>
	<artifactId>vaccine-1922</artifactId>
	<version>0.0.1</version>
	<packaging>jar</packaging>

	<description>Vaccine 1922 System</description>

	<organization>
		<name>Softleader</name>
		<url>http://www.softleader.com.tw</url>
	</organization>

	<properties>
		<!-- project configuration -->
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- plugin configuration -->
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<formatter-maven-plugin.version>2.10.0</formatter-maven-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<jib-maven-plugin.version>3.1.2</jib-maven-plugin.version>
		<docker-base-image>harbor.softleader.com.tw/library/zulu-openjdk-alpine:11-jre-taipei</docker-base-image>
		<docker-image-repository>harbor.softleader.com.tw</docker-image-repository>
		<docker-image-project>firstbank</docker-image-project>
		<jvm.InitialRAMPercentage>10</jvm.InitialRAMPercentage>
		<jvm.MaxRAMPercentage>50</jvm.MaxRAMPercentage>

		<!-- dependency versions -->
		<springframework.version>5.2.15.RELEASE</springframework.version>
		<spring-boot.version>2.3.12.RELEASE</spring-boot.version>
		<spring-cloud.version>Hoxton.SR11</spring-cloud.version>
		<mimosa.version>0.0.15</mimosa.version>
		<lombok.version>1.18.20</lombok.version>
		<mapstruct.version>1.4.2.Final</mapstruct.version>
		<lombok-mapstruct-binding.version>0.2.0</lombok-mapstruct-binding.version>

		<softleader.releases.repository>https://repo1.maven.org/maven2/</softleader.releases.repository>
		<spring.milestones.repository>https://repo.spring.io/milestone</spring.milestones.repository>
		<spring.release.repository>https://repo.spring.io/release</spring.release.repository>
	</properties>

	<repositories>
		<repository>
			<id>releases</id>
			<url>${softleader.releases.repository}</url>
		</repository>
		<repository>
			<id>spring-milestones</id>
			<name>Spring Milestones</name>
			<url>${spring.milestones.repository}</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>spring-release</id>
			<name>Spring Release</name>
			<url>${spring.release.repository}</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>tw.com.fcb.mimosa</groupId>
				<artifactId>mimosa-bom</artifactId>
				<version>${mimosa.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>tw.com.fcb.mimosa</groupId>
			<artifactId>mimosa-bootstrap</artifactId>
		</dependency>
		<dependency>
			<groupId>tw.com.fcb.mimosa</groupId>
			<artifactId>mimosa-openapi-ext</artifactId>
		</dependency>
		<dependency>
			<groupId>tw.com.fcb.mimosa</groupId>
			<artifactId>mimosa-data-jpa-ext</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>tw.com.fcb.mimosa</groupId>
			<artifactId>mimosa-openfeign-ext</artifactId>
		</dependency>
    <dependency>
      <groupId>tw.com.fcb.mimosa</groupId>
      <artifactId>mimosa-ddd-ext</artifactId>
    </dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>

		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>tw.com.fcb.mimosa</groupId>
			<artifactId>mimosa-bootstrap-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>application*.yml</exclude>
				</excludes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application*.yml</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<excludes>
					<exclude>application*.yml</exclude>
				</excludes>
			</testResource>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>application*.yml</include>
				</includes>
			</testResource>
		</testResources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<executable>${java.version}</executable>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<parameters>true</parameters>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok-mapstruct-binding</artifactId>
							<version>${lombok-mapstruct-binding.version}</version>
						</path>
						<path>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
							<version>${spring-boot.version}</version>
						</path>
					</annotationProcessorPaths>
					<compilerArgs>
						<compilerArg>
							-Amapstruct.defaultComponentModel=spring
						</compilerArg>
						<compilerArg>
							-Amapstruct.suppressGeneratorTimestamp=true
						</compilerArg>
					</compilerArgs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven-resources-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>com.google.cloud.tools</groupId>
				<artifactId>jib-maven-plugin</artifactId>
				<version>${jib-maven-plugin.version}</version>
				<configuration>
					<from>
						<image>${docker-base-image}</image>
					</from>
					<to>
						<image>${docker-image-repository}/${docker-image-project}/${project.artifactId}</image>
						<tags>
							<tag>${project.version}</tag>
						</tags>
					</to>
					<container>
						<jvmFlags>
							<jvmFlag>-server</jvmFlag>
							<jvmFlag>-XX:+UnlockExperimentalVMOptions</jvmFlag>
							<jvmFlag>-XX:+UseContainerSupport</jvmFlag>
							<jvmFlag>-XX:+UseZGC</jvmFlag>
							<jvmFlag>-XX:InitialRAMPercentage=${jvm.InitialRAMPercentage}</jvmFlag>
							<jvmFlag>-XX:MaxRAMPercentage=${jvm.MaxRAMPercentage}</jvmFlag>
							<jvmFlag>-Djava.awt.headless=true</jvmFlag>
							<jvmFlag>-Dfile.encoding=UTF-8</jvmFlag>
							<jvmFlag>-Djava.net.preferIPv4Stack=true</jvmFlag>
							<jvmFlag>-Dsun.net.client.defaultConnectTimeout=10000</jvmFlag>
							<jvmFlag>-Dsun.net.client.defaultReadTimeout=30000</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote=true</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.port=7777</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.local.only=false</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.authenticate=false</jvmFlag>
							<jvmFlag>-Dcom.sun.management.jmxremote.ssl=false</jvmFlag>
							<jvmFlag>-XshowSettings:vm</jvmFlag>
							<jvmFlag>-XX:+HeapDumpOnOutOfMemoryError</jvmFlag>
							<jvmFlag>-XX:HeapDumpPath=/var/logs/${project.artifactId}/heap/java.hprof</jvmFlag>
							<jvmFlag>-XX:ErrorFile=/var/logs/${project.artifactId}/heap/hs_err_pid_%p.log</jvmFlag>
							<jvmFlag>
								-Xlog:gc*,safepoint:/var/logs/${project.artifactId}/gc.log:time,uptime:filecount=100,filesize=128K
							</jvmFlag>
							<jvmFlag>-Dmimosa.pid.path=/tmp</jvmFlag>
						</jvmFlags>
						<ports>
							<port>7777</port>
							<port>8080</port>
							<port>20880</port>
						</ports>
						<volumes>
							<volume>/var/logs/${project.artifactId}/logs</volume>
							<volumn>/var/logs/${project.artifactId}/heap</volumn>
						</volumes>
						<format>OCI</format>
						<creationTime>${maven.build.timestamp}</creationTime>
					</container>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<id>repackage</id>
						<goals>
							<goal>repackage</goal>
							<goal>build-info</goal>
						</goals>
						<configuration>
							<additionalProperties>
								<encoding.source>${project.build.sourceEncoding}</encoding.source>
								<encoding.reporting>${project.reporting.outputEncoding}</encoding.reporting>
								<java.source>${maven.compiler.source}</java.source>
								<java.target>${maven.compiler.target}</java.target>
							</additionalProperties>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
				<configuration>
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>${formatter-maven-plugin.version}</version>
				<configuration>
					<configFile>${maven.multiModuleProjectDirectory}/ide-config/eclipse-format.xml
					</configFile>
					<skip>${format.skip}</skip>
				</configuration>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>

